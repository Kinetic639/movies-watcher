[{"D:\\projects\\movies-watcher\\src\\index.tsx":"1","D:\\projects\\movies-watcher\\src\\reportWebVitals.ts":"2","D:\\projects\\movies-watcher\\src\\App.tsx":"3","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts":"4","D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts":"5","D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts":"6","D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx":"7","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx":"8","D:\\projects\\movies-watcher\\src\\config.ts":"9","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx":"10","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx":"11","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts":"12","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx":"13","D:\\projects\\movies-watcher\\src\\redux\\features\\settings-slice.ts":"14","D:\\projects\\movies-watcher\\src\\redux\\features\\search-slice.ts":"15","D:\\projects\\movies-watcher\\src\\views\\Home\\HomeView.tsx":"16","D:\\projects\\movies-watcher\\src\\views\\SearchResultsView\\SearchResultsView.tsx":"17"},{"size":1628,"mtime":1655990522107,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1655544987009,"results":"20","hashOfConfig":"19"},{"size":1760,"mtime":1656002497481,"results":"21","hashOfConfig":"19"},{"size":836,"mtime":1655988625948,"results":"22","hashOfConfig":"19"},{"size":346,"mtime":1655922305174,"results":"23","hashOfConfig":"19"},{"size":2693,"mtime":1655988625949,"results":"24","hashOfConfig":"19"},{"size":4531,"mtime":1655990962083,"results":"25","hashOfConfig":"19"},{"size":572,"mtime":1655989429459,"results":"26","hashOfConfig":"19"},{"size":1099,"mtime":1655988625947,"results":"27","hashOfConfig":"19"},{"size":1935,"mtime":1655981788334,"results":"28","hashOfConfig":"19"},{"size":2002,"mtime":1655922305168,"results":"29","hashOfConfig":"19"},{"size":814,"mtime":1655988625950,"results":"30","hashOfConfig":"19"},{"size":1784,"mtime":1655990228817,"results":"31","hashOfConfig":"19"},{"size":1351,"mtime":1655989636759,"results":"32","hashOfConfig":"19"},{"size":1496,"mtime":1655988625949,"results":"33","hashOfConfig":"19"},{"size":298,"mtime":1655990196940,"results":"34","hashOfConfig":"19"},{"size":1043,"mtime":1656003814090,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f1fevb",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\movies-watcher\\src\\index.tsx",[],[],"D:\\projects\\movies-watcher\\src\\reportWebVitals.ts",[],[],[],"D:\\projects\\movies-watcher\\src\\App.tsx",["92"],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts",["93","94","95"],[],"D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx",["96"],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx",[],[],[],"D:\\projects\\movies-watcher\\src\\config.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx",["97","98","99","100","101"],[],"import React, {useRef, useState} from 'react';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport {Paper, Button} from '@mui/material'\r\nimport {MovieEntity} from \"../../../types/typings\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport './MoviesRow.scss'\r\nimport {MovieCard} from \"../MovieCard/MovieCard\";\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\ninterface Props {\r\n    position: number;\r\n    title: string;\r\n    movies: MovieEntity[]\r\n}\r\n\r\n\r\nexport const MoviesRow = ({title, movies, position}: Props) => {\r\n    const sliderRef = useRef(document.createElement(\"div\"))\r\n\r\n\r\n    const HandleClick = (direction: string, position: number) => {\r\n        const slider = document.getElementById(`slider-${position}`)\r\n        if (slider) {\r\n            if (direction === 'left') {\r\n                slider.scrollLeft = slider.scrollLeft - 240\r\n            }\r\n\r\n            if (direction === 'right') {\r\n                slider.scrollLeft = slider.scrollLeft + 240\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='row'>\r\n            <Typography variant='h4'>{title}</Typography>\r\n            <div className=\"row__slider\">\r\n                <ArrowBackIosIcon\r\n                    className='sliderArrow left'\r\n                    onClick={() => HandleClick('left', position)}/>\r\n                <div id={`slider-${position}`} className='row__container' ref={sliderRef}>\r\n                    {\r\n                        movies.map(movie => <MovieCard key={movie.id} movie={movie} row={position}/>)\r\n                    }\r\n                </div>\r\n                <ArrowForwardIosIcon className='sliderArrow right'\r\n                                     onClick={() => HandleClick('right', position)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx",["102","103","104"],[],"import React, {useState} from 'react'\r\nimport {MovieEntity} from \"../../../types/typings\";\r\n\r\nimport './MovieCard.scss'\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n    movie: MovieEntity,\r\n    row: number\r\n}\r\n\r\n\r\nconst baseUrl = 'https://image.tmdb.org/t/p/original/'\r\n\r\nexport const MovieCard = ({movie, row}: Props) => {\r\n    const [isHovered, setIsHovered] = useState(false)\r\n    return (\r\n        <div onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {/*<img key={movie.id} className={`row__poster ${row == 0 && \"row__poster--large\"}`}*/}\r\n            {/*     src={`${baseUrl}${row == 0 ? movie.poster_path : movie.backdrop_path}`}*/}\r\n            {/*     alt={movie.title}/>*/}\r\n\r\n            <div className={`movie-card__container ${row == 0 && \"movie-card__container--large\"}`}>\r\n                <img key={movie.id} className={`movie-card__poster ${row == 0 && \"movie-card__poster--large\"}`}\r\n                     src={`${baseUrl}${row == 0 ? movie.poster_path : movie.backdrop_path}`}\r\n                     alt={movie.title}/>\r\n                {isHovered && (\r\n                    <div className=\"movie-card__info-container\">\r\n                        <Typography variant=\"h5\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>{movie.title}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Popularity: {movie.popularity}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Votes: {movie.vote_count}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Genre: {movie.genre_ids}</Typography>\r\n\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts",["105"],[],"D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx",["106","107"],[],"import React, {useEffect, useState} from \"react\";\r\nimport {MovieEntity, MovieGenre} from \"../../types/typings\";\r\n\r\nimport './Banner.scss'\r\nimport {useAppSelector} from \"../../redux/app/hooks\";\r\nimport {CircularProgress} from \"@mui/material\";\r\n\r\nconst truncate = (str: string, n: number) => {\r\n    return str?.length > n ? str.substring(0, n - 1) + \"...\" : str;\r\n}\r\n\r\nexport const Banner = () => {\r\n    const moviesLists = useAppSelector((state) => state.movies)\r\n    const genresList = useAppSelector((state) => state.settings)\r\n    const [randomMovie, setRandomMovie] = useState<MovieEntity | null>(null)\r\n    const [genres, setGenres] = useState<MovieGenre[]>([])\r\n\r\n\r\n    useEffect(() => {\r\n        const currentMovieGenres = genresList.movieGenres.filter((item) => {\r\n            return randomMovie?.genre_ids.includes(item.id);\r\n        });\r\n        setGenres(currentMovieGenres)\r\n    }, [])\r\n\r\n    if (moviesLists.status === 'loading') {\r\n        return <CircularProgress/>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='banner' style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: ' top center',\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original${randomMovie?.backdrop_path}\")`\r\n        }}>\r\n            <div className=\"banner__content\">\r\n                <h1 className='banner__title'>{randomMovie?.title || randomMovie?.original_title}</h1>\r\n                <h3 className='banner__overview'>{truncate(randomMovie.overview, 150)}</h3>\r\n                <div>{genres.map(genre => <p key={genre.id}>{genre.name}</p>)}</div>\r\n\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n","D:\\projects\\movies-watcher\\src\\redux\\features\\settings-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\search-slice.ts",["108","109"],[],"D:\\projects\\movies-watcher\\src\\views\\Home\\HomeView.tsx",["110"],[],"D:\\projects\\movies-watcher\\src\\views\\SearchResultsView\\SearchResultsView.tsx",[],[],{"ruleId":"111","severity":1,"message":"112","line":26,"column":8,"nodeType":"113","endLine":26,"endColumn":18,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":9,"nodeType":"117","messageId":"118","endLine":3,"endColumn":27},{"ruleId":"115","severity":1,"message":"119","line":3,"column":29,"nodeType":"117","messageId":"118","endLine":3,"endColumn":46},{"ruleId":"115","severity":1,"message":"120","line":3,"column":48,"nodeType":"117","messageId":"118","endLine":3,"endColumn":59},{"ruleId":"115","severity":1,"message":"121","line":9,"column":20,"nodeType":"117","messageId":"118","endLine":9,"endColumn":26},{"ruleId":"115","severity":1,"message":"122","line":1,"column":24,"nodeType":"117","messageId":"118","endLine":1,"endColumn":32},{"ruleId":"115","severity":1,"message":"123","line":2,"column":8,"nodeType":"117","messageId":"118","endLine":2,"endColumn":16},{"ruleId":"115","severity":1,"message":"124","line":3,"column":9,"nodeType":"117","messageId":"118","endLine":3,"endColumn":14},{"ruleId":"115","severity":1,"message":"125","line":3,"column":16,"nodeType":"117","messageId":"118","endLine":3,"endColumn":22},{"ruleId":"115","severity":1,"message":"126","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":23,"column":58,"nodeType":"129","messageId":"130","endLine":23,"endColumn":60},{"ruleId":"127","severity":1,"message":"128","line":24,"column":74,"nodeType":"129","messageId":"130","endLine":24,"endColumn":76},{"ruleId":"127","severity":1,"message":"128","line":25,"column":44,"nodeType":"129","messageId":"130","endLine":25,"endColumn":46},{"ruleId":"115","severity":1,"message":"131","line":5,"column":7,"nodeType":"117","messageId":"118","endLine":5,"endColumn":14},{"ruleId":"115","severity":1,"message":"132","line":15,"column":25,"nodeType":"117","messageId":"118","endLine":15,"endColumn":39},{"ruleId":"111","severity":1,"message":"133","line":24,"column":8,"nodeType":"113","endLine":24,"endColumn":10,"suggestions":"134"},{"ruleId":"115","severity":1,"message":"116","line":3,"column":9,"nodeType":"117","messageId":"118","endLine":3,"endColumn":27},{"ruleId":"115","severity":1,"message":"135","line":3,"column":48,"nodeType":"117","messageId":"118","endLine":3,"endColumn":65},{"ruleId":"115","severity":1,"message":"136","line":2,"column":9,"nodeType":"117","messageId":"118","endLine":2,"endColumn":15},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'moviesList.status' and 'settings.status'. Either include them or remove the dependency array.","ArrayExpression",["137"],"@typescript-eslint/no-unused-vars","'getMoviesGenresRes' is defined but never used.","Identifier","unusedVar","'getMoviesQueryRes' is defined but never used.","'MovieEntity' is defined but never used.","'useRef' is defined but never used.","'useState' is defined but never used.","'Carousel' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'API_KEY' is assigned a value but never used.","'setRandomMovie' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'genresList.movieGenres' and 'randomMovie?.genre_ids'. Either include them or remove the dependency array.",["138"],"'MoviesListByGenre' is defined but never used.","'Banner' is defined but never used.",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [dispatch, moviesList.status, settings.status]",{"range":"143","text":"144"},"Update the dependencies array to be: [genresList.movieGenres, randomMovie?.genre_ids]",{"range":"145","text":"146"},[1151,1161],"[dispatch, moviesList.status, settings.status]",[893,895],"[genresList.movieGenres, randomMovie?.genre_ids]"]