[{"D:\\projects\\movies-watcher\\src\\index.tsx":"1","D:\\projects\\movies-watcher\\src\\reportWebVitals.ts":"2","D:\\projects\\movies-watcher\\src\\App.tsx":"3","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts":"4","D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts":"5","D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts":"6","D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx":"7","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx":"8","D:\\projects\\movies-watcher\\src\\config.ts":"9","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx":"10","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx":"11","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts":"12","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx":"13","D:\\projects\\movies-watcher\\src\\redux\\features\\settings-slice.ts":"14","D:\\projects\\movies-watcher\\src\\redux\\features\\search-slice.ts":"15","D:\\projects\\movies-watcher\\src\\views\\Home\\HomeView.tsx":"16","D:\\projects\\movies-watcher\\src\\views\\SearchResultsView\\SearchResultsView.tsx":"17","D:\\projects\\movies-watcher\\src\\utils\\motionUtils.ts":"18"},{"size":1850,"mtime":1656028641967,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1655544987009,"results":"21","hashOfConfig":"20"},{"size":1833,"mtime":1656039802917,"results":"22","hashOfConfig":"20"},{"size":836,"mtime":1655988625948,"results":"23","hashOfConfig":"20"},{"size":346,"mtime":1655922305174,"results":"24","hashOfConfig":"20"},{"size":2641,"mtime":1656028641968,"results":"25","hashOfConfig":"20"},{"size":4547,"mtime":1656037428918,"results":"26","hashOfConfig":"20"},{"size":513,"mtime":1656028641966,"results":"27","hashOfConfig":"20"},{"size":1099,"mtime":1655988625947,"results":"28","hashOfConfig":"20"},{"size":1777,"mtime":1656028641967,"results":"29","hashOfConfig":"20"},{"size":7814,"mtime":1656038294559,"results":"30","hashOfConfig":"20"},{"size":760,"mtime":1656028641970,"results":"31","hashOfConfig":"20"},{"size":2973,"mtime":1656040770543,"results":"32","hashOfConfig":"20"},{"size":1351,"mtime":1656004151914,"results":"33","hashOfConfig":"20"},{"size":1577,"mtime":1656028641969,"results":"34","hashOfConfig":"20"},{"size":567,"mtime":1656039927478,"results":"35","hashOfConfig":"20"},{"size":1499,"mtime":1656040268715,"results":"36","hashOfConfig":"20"},{"size":1973,"mtime":1656040852518,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f1fevb",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\movies-watcher\\src\\index.tsx",[],[],"D:\\projects\\movies-watcher\\src\\reportWebVitals.ts",[],[],[],"D:\\projects\\movies-watcher\\src\\App.tsx",["95"],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts",[],[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx",[],[],"D:\\projects\\movies-watcher\\src\\config.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx",["96"],[],"import React, {useEffect, useState} from 'react'\r\nimport {MovieEntity, MovieGenre} from \"../../../types/typings\";\r\nimport {motion} from \"framer-motion\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport {useAppSelector} from \"../../../redux/app/hooks\";\r\nimport {Box, CircularProgress} from \"@mui/material\";\r\nimport {\r\n    modalFadeInUpVariants,\r\n    posterFadeInVariants,\r\n    staggerOne\r\n} from '../../../utils/motionUtils';\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Fade from \"@mui/material/Fade\";\r\n\r\nimport './MovieCard.scss'\r\nimport './Modal.scss'\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: \"80%\",\r\n    maxWidth: 900,\r\n    bgcolor: '#181818',\r\n    boxShadow: 24,\r\n    borderRadius: '17px',\r\n    overflow: 'hidden',\r\n    outline: 'none',\r\n    p: 0,\r\n};\r\n\r\n\r\ninterface Props {\r\n    movie: MovieEntity,\r\n    row: number\r\n}\r\n\r\n\r\nconst baseUrl = 'https://image.tmdb.org/t/p/original/'\r\n\r\nexport const MovieCard = ({movie, row}: Props) => {\r\n    // const [isHovered, setIsHovered] = useState(false)\r\n    const genresList = useAppSelector((state) => state.settings)\r\n    const [genres, setGenres] = useState<MovieGenre[]>([])\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n    const fallbackTitle = movie.title || movie.original_title || movie.name || movie.original_name\r\n    useEffect(() => {\r\n        const currentMovieGenres = genresList.movieGenres.filter((item) => {\r\n            return movie?.genre_ids.includes(item.id);\r\n        });\r\n        setGenres(currentMovieGenres)\r\n    }, [])\r\n\r\n    if (genresList.status === 'loading') {\r\n        return <CircularProgress/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal className='modal' sx={{outline: 'none'}}\r\n                   open={open}\r\n                   onClose={handleClose}\r\n                   closeAfterTransition\r\n                   BackdropComponent={Backdrop}\r\n                   BackdropProps={{\r\n                       timeout: 500,\r\n                   }}\r\n            >\r\n                <Fade in={open}>\r\n                    <Box sx={style}>\r\n                        {movie.backdrop_path ?\r\n                            <img alt={fallbackTitle} className=\"modal__img\" src={`${baseUrl}${movie.backdrop_path}`}/> :\r\n                            <img alt={fallbackTitle} className=\"modal__img\"\r\n                                 src={`https://www.solidbackgrounds.com/images/2560x1440/2560x1440-davys-grey-solid-color-background.jpg`}/>\r\n                        }\r\n                        <motion.div variants={staggerOne} initial=\"initial\" animate=\"animate\" exit=\"exit\"\r\n                                    className=\"modal__info--wrp\">\r\n                            <motion.h3 variants={modalFadeInUpVariants}\r\n                                       className=\"modal__info--title\">{fallbackTitle}</motion.h3>\r\n                            <motion.p variants={modalFadeInUpVariants}\r\n                                      className=\"modal__info--description\">{movie.overview}</motion.p>\r\n                            <motion.hr variants={modalFadeInUpVariants} className=\"modal__info--line\"/>\r\n                            <motion.h4 variants={modalFadeInUpVariants} className=\"modal__info--otherTitle\">Info\r\n                                on <b>{fallbackTitle}</b></motion.h4>\r\n                            <motion.div variants={modalFadeInUpVariants} className=\"modal__info--row\">\r\n                                <span className='modal__info--row-label'>Genres: </span>\r\n                                <span\r\n                                    className=\"modal__info--row-description\">{genres.map(genre => genre.name).join(\", \")}</span>\r\n                            </motion.div>\r\n                            <motion.div variants={modalFadeInUpVariants} className=\"modal__info--row\">\r\n\t\t\t\t\t\t\t\t\t<span className='modal__info--row-label'>\r\n\t\t\t\t\t\t\t\t\t\tRelease date:\r\n\t\t\t\t\t\t\t\t\t</span>\r\n                                <span className=\"modal__info--row-description\">{movie.release_date}</span>\r\n                            </motion.div>\r\n                            <motion.div variants={modalFadeInUpVariants} className=\"modal__info--row\">\r\n                                <span className='modal__info--row-label'>Original language: </span>\r\n                                <span className=\"modal__info--row-description\">{movie.original_language}</span>\r\n                            </motion.div>\r\n                            <motion.div variants={modalFadeInUpVariants} className=\"modal__info--row\">\r\n                                <div className='modal__info--row-cell'>\r\n                                    <span className='modal__info--row-label'>Popularity: </span>\r\n                                    <span className=\"modal__info--row-description\">{movie.popularity}</span>\r\n                                </div>\r\n                                <div className='modal__info--row-cell'>\r\n                                    <span className='modal__info--row-label'>Votes: </span>\r\n                                    <span className=\"modal__info--row-description\">{movie.vote_count}</span>\r\n                                </div>\r\n                                <div className='modal__info--row-cell'>\r\n                                    <span className='modal__info--row-label'>Average vote: </span>\r\n                                    <span\r\n                                        className=\"modal__info--row-description\">{movie.vote_average || \"Not available\"}</span>\r\n                                </div>\r\n                            </motion.div>\r\n                        </motion.div>\r\n                    </Box>\r\n                </Fade>\r\n            </Modal>\r\n            <motion.div\r\n                variants={posterFadeInVariants}\r\n                className={`poster ${row === 0 ? 'poster__large' : null}`}\r\n                onClick={handleOpen}\r\n            >\r\n\r\n                <img className=\"poster__img\" alt={fallbackTitle}\r\n                     src={`${baseUrl}${row === 0 ? movie.poster_path : movie.backdrop_path}`}/>\r\n\r\n                <div className=\"poster__info\">\r\n                    <div className=\"poster__info--box-1\">\r\n                        <h4 className=\"poster__info--title\">{fallbackTitle}</h4>\r\n                        <ul className=\"poster__info--genres\">\r\n                            {genres.map(genre => (\r\n                                <li key={`Genre--id_${genre.id}`}\r\n                                    className=\"poster__info--genres-title\">{genre.name}</li>\r\n                            ))}\r\n                        </ul>\r\n                        <div className=\"poster__info--row\">\r\n                            <div className='poster__info--row-cell'>\r\n                                <span className='poster__info--row-label'>Popularity: </span>\r\n                                <span className=\"poster__info--row-description\">{Math.floor(movie.popularity)}</span>\r\n                            </div>\r\n                            <div className='poster__info--row-cell'>\r\n                                <span className='poster__info--row-label'>Votes: </span>\r\n                                <span className=\"poster__info--row-description\">{movie.vote_count}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"poster__info--box-2\">\r\n                        <MoreVertIcon fontSize='large' className=\"poster__info--icon\"/>\r\n                    </div>\r\n                </div>\r\n            </motion.div>\r\n        </>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx",["97"],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\settings-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\search-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\views\\Home\\HomeView.tsx",[],[],"D:\\projects\\movies-watcher\\src\\views\\SearchResultsView\\SearchResultsView.tsx",[],[],"D:\\projects\\movies-watcher\\src\\utils\\motionUtils.ts",[],[],{"ruleId":"98","severity":1,"message":"99","line":27,"column":8,"nodeType":"100","endLine":27,"endColumn":18,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":56,"column":8,"nodeType":"100","endLine":56,"endColumn":10,"suggestions":"103"},{"ruleId":"98","severity":1,"message":"104","line":46,"column":8,"nodeType":"100","endLine":46,"endColumn":21,"suggestions":"105"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'moviesList.status' and 'settings.status'. Either include them or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has missing dependencies: 'genresList.movieGenres' and 'movie?.genre_ids'. Either include them or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'genresList.movieGenres'. Either include it or remove the dependency array.",["108"],{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch, moviesList.status, settings.status]",{"range":"115","text":"116"},"Update the dependencies array to be: [genresList.movieGenres, movie?.genre_ids]",{"range":"117","text":"118"},"Update the dependencies array to be: [genresList.movieGenres, moviesLists]",{"range":"119","text":"120"},[1199,1209],"[dispatch, moviesList.status, settings.status]",[1761,1763],"[genresList.movieGenres, movie?.genre_ids]",[1667,1680],"[genresList.movieGenres, moviesLists]"]