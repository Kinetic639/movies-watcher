[{"D:\\projects\\movies-watcher\\src\\index.tsx":"1","D:\\projects\\movies-watcher\\src\\reportWebVitals.ts":"2","D:\\projects\\movies-watcher\\src\\App.tsx":"3","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts":"4","D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts":"5","D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts":"6","D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx":"7","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx":"8","D:\\projects\\movies-watcher\\src\\config.ts":"9","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx":"10","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx":"11","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts":"12","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx":"13"},{"size":1590,"mtime":1655922305173,"results":"14","hashOfConfig":"15"},{"size":440,"mtime":1655544987009,"results":"16","hashOfConfig":"15"},{"size":1411,"mtime":1655922305165,"results":"17","hashOfConfig":"15"},{"size":656,"mtime":1655922305175,"results":"18","hashOfConfig":"15"},{"size":346,"mtime":1655922305174,"results":"19","hashOfConfig":"15"},{"size":2637,"mtime":1655922305176,"results":"20","hashOfConfig":"15"},{"size":9155,"mtime":1655922305167,"results":"21","hashOfConfig":"15"},{"size":503,"mtime":1655922305170,"results":"22","hashOfConfig":"15"},{"size":920,"mtime":1655922305172,"results":"23","hashOfConfig":"15"},{"size":1967,"mtime":1655922305171,"results":"24","hashOfConfig":"15"},{"size":2002,"mtime":1655922305168,"results":"25","hashOfConfig":"15"},{"size":675,"mtime":1655922305176,"results":"26","hashOfConfig":"15"},{"size":645,"mtime":1655922377641,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f1fevb",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\movies-watcher\\src\\index.tsx",[],[],"D:\\projects\\movies-watcher\\src\\reportWebVitals.ts",[],[],[],"D:\\projects\\movies-watcher\\src\\App.tsx",["71","72"],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts",["73"],[],"D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx",[],[],"D:\\projects\\movies-watcher\\src\\config.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx",["74","75","76","77","78"],[],"import React, {useRef, useState} from 'react';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport {Paper, Button} from '@mui/material'\r\nimport {MovieEntity} from \"../../../types/typings\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport './MoviesRow.scss'\r\nimport {MovieCard} from \"../MovieCard/MovieCard\";\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\ninterface Props {\r\n    position: number;\r\n    title: string;\r\n    movies: MovieEntity[]\r\n}\r\n\r\n\r\nexport const MoviesRow = ({title, movies, position}: Props) => {\r\n    const sliderRef = useRef(document.createElement(\"div\"))\r\n\r\n\r\n    const HandleClick = (direction: string, position: number) => {\r\n        const slider = document.getElementById(`slider-${position}`)\r\n        console.log('click')\r\n\r\n        if (slider) {\r\n            if (direction === 'left') {\r\n                slider.scrollLeft = slider.scrollLeft - 240\r\n            }\r\n\r\n            if (direction === 'right') {\r\n                slider.scrollLeft = slider.scrollLeft + 240\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='row'>\r\n            <Typography variant='h4'>{title}</Typography>\r\n            <div className=\"row__slider\">\r\n                <ArrowBackIosIcon\r\n                    className='sliderArrow left'\r\n                    onClick={() => HandleClick('left', position)}/>\r\n                <div id={`slider-${position}`} className='row__container' ref={sliderRef}>\r\n                    {\r\n                        movies.map(movie => <MovieCard key={movie.id} movie={movie} row={position}/>)\r\n                    }\r\n                </div>\r\n                <ArrowForwardIosIcon className='sliderArrow right'\r\n                                     onClick={() => HandleClick('right', position)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx",["79","80","81"],[],"import React, {useState} from 'react'\r\nimport {MovieEntity} from \"../../../types/typings\";\r\n\r\nimport './MovieCard.scss'\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n    movie: MovieEntity,\r\n    row: number\r\n}\r\n\r\n\r\nconst baseUrl = 'https://image.tmdb.org/t/p/original/'\r\n\r\nexport const MovieCard = ({movie, row}: Props) => {\r\n    const [isHovered, setIsHovered] = useState(false)\r\n    return (\r\n        <div onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {/*<img key={movie.id} className={`row__poster ${row == 0 && \"row__poster--large\"}`}*/}\r\n            {/*     src={`${baseUrl}${row == 0 ? movie.poster_path : movie.backdrop_path}`}*/}\r\n            {/*     alt={movie.title}/>*/}\r\n\r\n            <div className={`movie-card__container ${row == 0 && \"movie-card__container--large\"}`}>\r\n                <img key={movie.id} className={`movie-card__poster ${row == 0 && \"movie-card__poster--large\"}`}\r\n                     src={`${baseUrl}${row == 0 ? movie.poster_path : movie.backdrop_path}`}\r\n                     alt={movie.title}/>\r\n                {isHovered && (\r\n                    <div className=\"movie-card__info-container\">\r\n                        <Typography variant=\"h5\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>{movie.title}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Popularity: {movie.popularity}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Votes: {movie.vote_count}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Genre: {movie.genre_ids}</Typography>\r\n\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts",["82","83","84"],[],"import {createApi, fetchBaseQuery} from '@reduxjs/toolkit/query/react'\r\nimport {getMoviesQueryRes, MovieEntity, MovieGenre} from \"../../types/typings\";\r\nimport {requests} from \"../../config\";\r\n\r\nconst API_KEY = 'f33d49afd2b791f08807b528b158c515'\r\n\r\nexport const apiSlice = createApi({\r\n    reducerPath: 'apiSlice',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://api.themoviedb.org/3'\r\n    }),\r\n    tagTypes: ['Movies'],\r\n    endpoints: (builder) => ({\r\n        getMoviesByGenres: builder.query<getMoviesQueryRes, void>({\r\n\r\n            query: () => requests.fetchNetflixOriginals\r\n        })\r\n    })\r\n})\r\n\r\n\r\nexport const {useGetMoviesByGenresQuery} = apiSlice\r\n","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx",["85","86","87","88","89","90"],[],{"ruleId":"91","severity":1,"message":"92","line":21,"column":8,"nodeType":"93","endLine":21,"endColumn":18,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":22,"column":36,"nodeType":"97","messageId":"98","endLine":22,"endColumn":46},{"ruleId":"95","severity":1,"message":"99","line":3,"column":9,"nodeType":"97","messageId":"98","endLine":3,"endColumn":20},{"ruleId":"95","severity":1,"message":"100","line":1,"column":24,"nodeType":"97","messageId":"98","endLine":1,"endColumn":32},{"ruleId":"95","severity":1,"message":"101","line":2,"column":8,"nodeType":"97","messageId":"98","endLine":2,"endColumn":16},{"ruleId":"95","severity":1,"message":"102","line":3,"column":9,"nodeType":"97","messageId":"98","endLine":3,"endColumn":14},{"ruleId":"95","severity":1,"message":"103","line":3,"column":16,"nodeType":"97","messageId":"98","endLine":3,"endColumn":22},{"ruleId":"95","severity":1,"message":"104","line":6,"column":8,"nodeType":"97","messageId":"98","endLine":6,"endColumn":18},{"ruleId":"105","severity":1,"message":"106","line":23,"column":58,"nodeType":"107","messageId":"108","endLine":23,"endColumn":60},{"ruleId":"105","severity":1,"message":"106","line":24,"column":74,"nodeType":"107","messageId":"108","endLine":24,"endColumn":76},{"ruleId":"105","severity":1,"message":"106","line":25,"column":44,"nodeType":"107","messageId":"108","endLine":25,"endColumn":46},{"ruleId":"95","severity":1,"message":"99","line":2,"column":28,"nodeType":"97","messageId":"98","endLine":2,"endColumn":39},{"ruleId":"95","severity":1,"message":"109","line":2,"column":41,"nodeType":"97","messageId":"98","endLine":2,"endColumn":51},{"ruleId":"95","severity":1,"message":"110","line":5,"column":7,"nodeType":"97","messageId":"98","endLine":5,"endColumn":14},{"ruleId":"95","severity":1,"message":"111","line":1,"column":16,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"100","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":35},{"ruleId":"95","severity":1,"message":"109","line":2,"column":22,"nodeType":"97","messageId":"98","endLine":2,"endColumn":32},{"ruleId":"95","severity":1,"message":"112","line":5,"column":9,"nodeType":"97","messageId":"98","endLine":5,"endColumn":23},{"ruleId":"95","severity":1,"message":"113","line":6,"column":9,"nodeType":"97","messageId":"98","endLine":6,"endColumn":20},{"ruleId":"95","severity":1,"message":"114","line":13,"column":11,"nodeType":"97","messageId":"98","endLine":13,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'moviesList.status'. Either include it or remove the dependency array.","ArrayExpression",["115"],"@typescript-eslint/no-unused-vars","'isFetching' is assigned a value but never used.","Identifier","unusedVar","'MovieEntity' is defined but never used.","'useState' is defined but never used.","'Carousel' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'MovieGenre' is defined but never used.","'API_KEY' is assigned a value but never used.","'useEffect' is defined but never used.","'getMoviesAsync' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.",{"desc":"116","fix":"117"},"Update the dependencies array to be: [dispatch, moviesList.status]",{"range":"118","text":"119"},[883,893],"[dispatch, moviesList.status]"]