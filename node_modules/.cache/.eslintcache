[{"D:\\projects\\movies-watcher\\src\\index.tsx":"1","D:\\projects\\movies-watcher\\src\\reportWebVitals.ts":"2","D:\\projects\\movies-watcher\\src\\App.tsx":"3","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts":"4","D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts":"5","D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts":"6","D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx":"7","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx":"8","D:\\projects\\movies-watcher\\src\\config.ts":"9","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx":"10","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx":"11","D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts":"12","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx":"13","D:\\projects\\movies-watcher\\src\\redux\\features\\settings-slice.ts":"14","D:\\projects\\movies-watcher\\src\\redux\\features\\search-slice.ts":"15","D:\\projects\\movies-watcher\\src\\views\\Home\\HomeView.tsx":"16","D:\\projects\\movies-watcher\\src\\views\\SearchResultsView\\SearchResultsView.tsx":"17","D:\\projects\\movies-watcher\\src\\utils\\motionUtils.ts":"18"},{"size":1850,"mtime":1656028641967,"results":"19","hashOfConfig":"20"},{"size":440,"mtime":1655544987009,"results":"21","hashOfConfig":"20"},{"size":1668,"mtime":1656037428915,"results":"22","hashOfConfig":"20"},{"size":836,"mtime":1655988625948,"results":"23","hashOfConfig":"20"},{"size":346,"mtime":1655922305174,"results":"24","hashOfConfig":"20"},{"size":2641,"mtime":1656028641968,"results":"25","hashOfConfig":"20"},{"size":4547,"mtime":1656037428918,"results":"26","hashOfConfig":"20"},{"size":513,"mtime":1656028641966,"results":"27","hashOfConfig":"20"},{"size":1099,"mtime":1655988625947,"results":"28","hashOfConfig":"20"},{"size":1777,"mtime":1656028641967,"results":"29","hashOfConfig":"20"},{"size":7516,"mtime":1656028641965,"results":"30","hashOfConfig":"20"},{"size":760,"mtime":1656028641970,"results":"31","hashOfConfig":"20"},{"size":2431,"mtime":1656037428917,"results":"32","hashOfConfig":"20"},{"size":1351,"mtime":1656004151914,"results":"33","hashOfConfig":"20"},{"size":1577,"mtime":1656028641969,"results":"34","hashOfConfig":"20"},{"size":292,"mtime":1656037428919,"results":"35","hashOfConfig":"20"},{"size":1236,"mtime":1656026444165,"results":"36","hashOfConfig":"20"},{"size":1197,"mtime":1656026444164,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f1fevb",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\movies-watcher\\src\\index.tsx",[],[],"D:\\projects\\movies-watcher\\src\\reportWebVitals.ts",[],[],[],"D:\\projects\\movies-watcher\\src\\App.tsx",["96"],[],"import React, {useEffect} from 'react';\r\nimport {Routes, Route, useLocation, Navigate} from 'react-router-dom'\r\nimport {Box, CircularProgress} from \"@mui/material\";\r\nimport {NavBar} from \"./components/NavBar/NavBar\";\r\nimport {useAppDispatch, useAppSelector} from './redux/app/hooks';\r\nimport {RootState} from './redux/app/store';\r\nimport {getMoviesAsync} from \"./redux/features/movies-slice\";\r\nimport {getMoviesGenresAsync} from \"./redux/features/settings-slice\";\r\nimport {HomeView} from \"./views/Home/HomeView\";\r\nimport {SearchResultsView} from \"./views/SearchResultsView/SearchResultsView\";\r\n\r\nexport const App = () => {\r\n    const location = useLocation()\r\n    const dispatch = useAppDispatch()\r\n    const moviesList = useAppSelector((state: RootState) => state.movies)\r\n    const settings = useAppSelector((state: RootState) => state.settings)\r\n\r\n\r\n    useEffect(() => {\r\n        if (moviesList.status === 'succeeded' || moviesList.status === 'idle') {\r\n            dispatch(getMoviesAsync())\r\n        }\r\n        if (settings.status === 'succeeded' || settings.status === 'idle') {\r\n            dispatch(getMoviesGenresAsync())\r\n        }\r\n    }, [dispatch])\r\n\r\n\r\n    if (moviesList.status === 'loading' || settings.status === 'loading') {\r\n        return <CircularProgress/>\r\n    }\r\n    return (\r\n        <Box component='main' key={location.pathname}>\r\n            <NavBar/>\r\n\r\n            <Routes>\r\n                <Route path=\"/\" element={<Navigate replace to=\"/home\"/>}/>\r\n                <Route path=\"/home\" element={<HomeView/>}/>\r\n                <Route path=\"/search\" element={<SearchResultsView/>}/>\r\n            </Routes>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\n","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts",[],[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx",[],[],"D:\\projects\\movies-watcher\\src\\config.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx",["97"],[],"D:\\projects\\movies-watcher\\src\\redux\\services\\apiSlice.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx",["98"],[],"import React, {useEffect, useState} from \"react\";\r\n\r\nimport './Banner.scss'\r\nimport {useAppSelector} from \"../../redux/app/hooks\";\r\nimport {MovieEntity, MovieGenre} from \"../../types/typings\";\r\nimport {CircularProgress} from \"@mui/material\";\r\n\r\nconst truncate = (str: string, n: number) => {\r\n    return str?.length > n ? str.substring(0, n - 1) + \"...\" : str;\r\n}\r\n\r\nexport const Banner = () => {\r\n    const moviesLists = useAppSelector((state) => state.movies)\r\n    const genresList = useAppSelector((state) => state.settings)\r\n    const [genres, setGenres] = useState<MovieGenre[]>([])\r\n    const [randomMovie, setRandomMovie] = useState<MovieEntity>({\r\n        \"adult\": false,\r\n        \"backdrop_path\": \"\",\r\n        \"genre_ids\": [],\r\n        \"id\": 0,\r\n        \"original_language\": \"\",\r\n        \"name\": \"\",\r\n        \"original_name\": \"\",\r\n        \"original_title\": \"\",\r\n        \"overview\": \"\",\r\n        \"popularity\": 0,\r\n        \"poster_path\": \"\",\r\n        \"release_date\": \"\",\r\n        \"title\": \"\",\r\n        \"video\": false,\r\n        \"vote_average\": 0,\r\n        \"vote_count\": 0,\r\n        \"maturityRating\": \"\",\r\n    })\r\n    useEffect(() => {\r\n        if (moviesLists.status === 'succeeded') {\r\n            setRandomMovie(moviesLists.moviesLists[0].result[Math.floor(Math.random() * 19)])\r\n            const currentMovieGenres = genresList.movieGenres.filter((item) => {\r\n                return moviesLists.moviesLists[0].result[0]?.genre_ids.includes(item.id);\r\n            });\r\n            setGenres(currentMovieGenres)\r\n        }\r\n\r\n    }, [moviesLists])\r\n\r\n    if (moviesLists.moviesLists.length === 0) {\r\n        return <CircularProgress/>\r\n    }\r\n\r\n    return (\r\n        <div className='banner' style={{\r\n            backgroundImage: `url(\"https://image.tmdb.org/t/p/original${randomMovie?.backdrop_path}\")`\r\n        }}>\r\n            <div className=\"banner__content\">\r\n                <h1 className='banner__content--title'>{randomMovie.title || randomMovie.original_title || randomMovie.name || randomMovie.original_name}</h1>\r\n                <p className='banner__content--description'>{truncate(randomMovie.overview, 150)}</p>\r\n                <div className='banner__content--genres'>{genres.map(genre => <p key={genre.id}\r\n                                                                                 className='banner__content--genres-item'>{genre.name}</p>)}</div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\redux\\features\\settings-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\search-slice.ts",[],[],"D:\\projects\\movies-watcher\\src\\views\\Home\\HomeView.tsx",[],[],"D:\\projects\\movies-watcher\\src\\views\\SearchResultsView\\SearchResultsView.tsx",[],[],"D:\\projects\\movies-watcher\\src\\utils\\motionUtils.ts",[],[],{"ruleId":"99","severity":1,"message":"100","line":26,"column":8,"nodeType":"101","endLine":26,"endColumn":18,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":56,"column":8,"nodeType":"101","endLine":56,"endColumn":10,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":44,"column":8,"nodeType":"101","endLine":44,"endColumn":21,"suggestions":"106"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'moviesList.status' and 'settings.status'. Either include them or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has missing dependencies: 'genresList.movieGenres' and 'movie?.genre_ids'. Either include them or remove the dependency array.",["108"],"React Hook useEffect has a missing dependency: 'genresList.movieGenres'. Either include it or remove the dependency array.",["109"],{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},"Update the dependencies array to be: [dispatch, moviesList.status, settings.status]",{"range":"116","text":"117"},"Update the dependencies array to be: [genresList.movieGenres, movie?.genre_ids]",{"range":"118","text":"119"},"Update the dependencies array to be: [genresList.movieGenres, moviesLists]",{"range":"120","text":"121"},[1151,1161],"[dispatch, moviesList.status, settings.status]",[1761,1763],"[genresList.movieGenres, movie?.genre_ids]",[1541,1554],"[genresList.movieGenres, moviesLists]"]