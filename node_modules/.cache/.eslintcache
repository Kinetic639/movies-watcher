[{"D:\\projects\\movies-watcher\\src\\index.tsx":"1","D:\\projects\\movies-watcher\\src\\reportWebVitals.ts":"2","D:\\projects\\movies-watcher\\src\\App.tsx":"3","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts":"4","D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts":"5","D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx":"6","D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts":"7","D:\\projects\\movies-watcher\\src\\config.ts":"8","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx":"9","D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx":"10","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx":"11","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx":"12"},{"size":1590,"mtime":1655886526885,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1655544987009,"results":"15","hashOfConfig":"14"},{"size":1089,"mtime":1655911833031,"results":"16","hashOfConfig":"14"},{"size":459,"mtime":1655911720439,"results":"17","hashOfConfig":"14"},{"size":346,"mtime":1655911431768,"results":"18","hashOfConfig":"14"},{"size":9155,"mtime":1655721661428,"results":"19","hashOfConfig":"14"},{"size":2637,"mtime":1655737369191,"results":"20","hashOfConfig":"14"},{"size":920,"mtime":1655735545647,"results":"21","hashOfConfig":"14"},{"size":503,"mtime":1655736554178,"results":"22","hashOfConfig":"14"},{"size":1967,"mtime":1655905158340,"results":"23","hashOfConfig":"14"},{"size":2002,"mtime":1655903850641,"results":"24","hashOfConfig":"14"},{"size":645,"mtime":1655911947918,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"f1fevb",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\projects\\movies-watcher\\src\\index.tsx",[],[],[],"D:\\projects\\movies-watcher\\src\\reportWebVitals.ts",[],[],"D:\\projects\\movies-watcher\\src\\App.tsx",["67"],[],"import React, {useEffect} from 'react';\r\n// import {Routes, Route, useLocation, Navigate} from 'react-router-dom'\r\nimport {Box} from \"@mui/material\";\r\nimport {NavBar} from \"./components/NavBar/NavBar\";\r\nimport {useAppDispatch, useAppSelector} from './redux/app/hooks';\r\nimport {RootState} from './redux/app/store';\r\nimport {getMoviesAsync} from \"./redux/features/movies-slice\";\r\nimport {MoviesList} from \"./components/movies/MoviesList/MoviesList\";\r\nimport {Banner} from \"./components/Banner/Banner\";\r\n\r\nexport const App = () => {\r\n    // const location = useLocation()\r\n    const dispatch = useAppDispatch()\r\n    const moviesList = useAppSelector((state: RootState) => state.movies)\r\n\r\n\r\n    useEffect(() => {\r\n        if (moviesList.status === 'succeeded' || moviesList.status === 'idle') {\r\n            dispatch(getMoviesAsync())\r\n        }\r\n    }, [dispatch])\r\n    return (\r\n        <Box component='main'>\r\n            <NavBar/>\r\n            <Banner moviesLists={moviesList.moviesLists}/>\r\n            <MoviesList moviesLists={moviesList.moviesLists}/>\r\n        </Box>\r\n\r\n    );\r\n}\r\n\r\n","D:\\projects\\movies-watcher\\src\\redux\\app\\store.ts",[],[],"D:\\projects\\movies-watcher\\src\\redux\\app\\hooks.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\NavBar\\NavBar.tsx",[],[],"D:\\projects\\movies-watcher\\src\\redux\\features\\movies-slice.ts",["68"],[],"import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {requests} from \"../../config\";\r\nimport {MovieEntity, MovieGenre} from \"../../types/typings\";\r\n\r\nexport const getMoviesAsync = createAsyncThunk(\r\n    'gifts/getGiftAsync',\r\n    async () => {\r\n        const [\r\n            trendingNow,\r\n            netflixOriginals,\r\n            topRated,\r\n            actionMovies,\r\n            comedyMovies,\r\n            horrorMovies,\r\n            romanceMovies,\r\n            documentaries,\r\n        ] = await Promise.all([\r\n            fetch(requests.fetchTrending).then((res) => res.json()),\r\n            fetch(requests.fetchNetflixOriginals).then((res) => res.json()),\r\n            fetch(requests.fetchTopRated).then((res) => res.json()),\r\n            fetch(requests.fetchActionMovies).then((res) => res.json()),\r\n            fetch(requests.fetchComedyMovies).then((res) => res.json()),\r\n            fetch(requests.fetchHorrorMovies).then((res) => res.json()),\r\n            fetch(requests.fetchRomanceMovies).then((res) => res.json()),\r\n            fetch(requests.fetchDocumentaries).then((res) => res.json()),\r\n        ])\r\n        return [\r\n            {title: 'Trending Now', result: trendingNow.results},\r\n            {title: 'Netflix Originals', result: netflixOriginals.results},\r\n            {title: 'Top Rated', result: topRated.results},\r\n            {title: 'Action Movies', result: actionMovies.results},\r\n            {title: 'Comedy Movies', result: comedyMovies.results},\r\n            {title: 'Horror Movies', result: horrorMovies.results},\r\n            {title: 'Romance Movies', result: romanceMovies.results},\r\n            {title: 'Documentaries', result: documentaries.results},\r\n        ]\r\n    },\r\n);\r\n\r\n\r\ninterface MoviesSliceState {\r\n    moviesLists: MovieGenre[];\r\n    status: 'idle' | 'loading' | 'succeeded' | 'failed';\r\n    error: string | null;\r\n}\r\n\r\nconst initialState: MoviesSliceState = {\r\n    moviesLists: [],\r\n    status: 'idle',\r\n    error: null,\r\n};\r\n\r\nexport const moviesSlice = createSlice({\r\n    name: 'moviesList',\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getMoviesAsync.pending, (state, action) => {\r\n                state.status = 'loading';\r\n            })\r\n            .addCase(getMoviesAsync.fulfilled, (state, action) => {\r\n                state.status = 'succeeded';\r\n                state.moviesLists = action.payload\r\n            })\r\n            .addCase(getMoviesAsync.rejected, (state, action) => {\r\n                state.status = 'failed';\r\n            })\r\n\r\n    },\r\n});\r\n\r\nexport default moviesSlice.reducer;\r\n","D:\\projects\\movies-watcher\\src\\config.ts",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesList\\MoviesList.tsx",[],[],"D:\\projects\\movies-watcher\\src\\components\\movies\\MoviesRow\\MoviesRow.tsx",["69","70","71","72","73"],[],"import React, {useRef, useState} from 'react';\r\nimport Carousel from 'react-material-ui-carousel'\r\nimport {Paper, Button} from '@mui/material'\r\nimport {MovieEntity} from \"../../../types/typings\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport './MoviesRow.scss'\r\nimport {MovieCard} from \"../MovieCard/MovieCard\";\r\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@mui/icons-material/ArrowForwardIos';\r\n\r\ninterface Props {\r\n    position: number;\r\n    title: string;\r\n    movies: MovieEntity[]\r\n}\r\n\r\n\r\nexport const MoviesRow = ({title, movies, position}: Props) => {\r\n    const sliderRef = useRef(document.createElement(\"div\"))\r\n\r\n\r\n    const HandleClick = (direction: string, position: number) => {\r\n        const slider = document.getElementById(`slider-${position}`)\r\n        console.log('click')\r\n\r\n        if (slider) {\r\n            if (direction === 'left') {\r\n                slider.scrollLeft = slider.scrollLeft - 240\r\n            }\r\n\r\n            if (direction === 'right') {\r\n                slider.scrollLeft = slider.scrollLeft + 240\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='row'>\r\n            <Typography variant='h4'>{title}</Typography>\r\n            <div className=\"row__slider\">\r\n                <ArrowBackIosIcon\r\n                    className='sliderArrow left'\r\n                    onClick={() => HandleClick('left', position)}/>\r\n                <div id={`slider-${position}`} className='row__container' ref={sliderRef}>\r\n                    {\r\n                        movies.map(movie => <MovieCard key={movie.id} movie={movie} row={position}/>)\r\n                    }\r\n                </div>\r\n                <ArrowForwardIosIcon className='sliderArrow right'\r\n                                     onClick={() => HandleClick('right', position)}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\components\\movies\\MovieCard\\MovieCard.tsx",["74","75","76"],[],"import React, {useState} from 'react'\r\nimport {MovieEntity} from \"../../../types/typings\";\r\n\r\nimport './MovieCard.scss'\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\ninterface Props {\r\n    movie: MovieEntity,\r\n    row: number\r\n}\r\n\r\n\r\nconst baseUrl = 'https://image.tmdb.org/t/p/original/'\r\n\r\nexport const MovieCard = ({movie, row}: Props) => {\r\n    const [isHovered, setIsHovered] = useState(false)\r\n    return (\r\n        <div onMouseEnter={() => setIsHovered(true)} onMouseLeave={() => setIsHovered(false)}>\r\n            {/*<img key={movie.id} className={`row__poster ${row == 0 && \"row__poster--large\"}`}*/}\r\n            {/*     src={`${baseUrl}${row == 0 ? movie.poster_path : movie.backdrop_path}`}*/}\r\n            {/*     alt={movie.title}/>*/}\r\n\r\n            <div className={`movie-card__container ${row == 0 && \"movie-card__container--large\"}`}>\r\n                <img key={movie.id} className={`movie-card__poster ${row == 0 && \"movie-card__poster--large\"}`}\r\n                     src={`${baseUrl}${row == 0 ? movie.poster_path : movie.backdrop_path}`}\r\n                     alt={movie.title}/>\r\n                {isHovered && (\r\n                    <div className=\"movie-card__info-container\">\r\n                        <Typography variant=\"h5\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>{movie.title}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Popularity: {movie.popularity}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Votes: {movie.vote_count}</Typography>\r\n                        <Typography variant=\"subtitle1\" component=\"div\"\r\n                                    sx={{padding: '15px 10px'}}>Genre: {movie.genre_ids}</Typography>\r\n\r\n                    </div>\r\n\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\projects\\movies-watcher\\src\\components\\Banner\\Banner.tsx",["77","78","79","80","81","82"],[],{"ruleId":"83","severity":1,"message":"84","line":21,"column":8,"nodeType":"85","endLine":21,"endColumn":18,"suggestions":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":9,"nodeType":"89","messageId":"90","endLine":3,"endColumn":20},{"ruleId":"87","severity":1,"message":"91","line":1,"column":24,"nodeType":"89","messageId":"90","endLine":1,"endColumn":32},{"ruleId":"87","severity":1,"message":"92","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"93","line":3,"column":9,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"94","line":3,"column":16,"nodeType":"89","messageId":"90","endLine":3,"endColumn":22},{"ruleId":"87","severity":1,"message":"95","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":18},{"ruleId":"96","severity":1,"message":"97","line":23,"column":58,"nodeType":"98","messageId":"99","endLine":23,"endColumn":60},{"ruleId":"96","severity":1,"message":"97","line":24,"column":74,"nodeType":"98","messageId":"99","endLine":24,"endColumn":76},{"ruleId":"96","severity":1,"message":"97","line":25,"column":44,"nodeType":"98","messageId":"99","endLine":25,"endColumn":46},{"ruleId":"87","severity":1,"message":"100","line":1,"column":16,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},{"ruleId":"87","severity":1,"message":"91","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"88","line":2,"column":9,"nodeType":"89","messageId":"90","endLine":2,"endColumn":20},{"ruleId":"87","severity":1,"message":"101","line":5,"column":9,"nodeType":"89","messageId":"90","endLine":5,"endColumn":23},{"ruleId":"87","severity":1,"message":"102","line":6,"column":9,"nodeType":"89","messageId":"90","endLine":6,"endColumn":20},{"ruleId":"87","severity":1,"message":"103","line":13,"column":11,"nodeType":"89","messageId":"90","endLine":13,"endColumn":19},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'moviesList.status'. Either include it or remove the dependency array.","ArrayExpression",["104"],"@typescript-eslint/no-unused-vars","'MovieEntity' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Carousel' is defined but never used.","'Paper' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'getMoviesAsync' is defined but never used.","'useSelector' is defined but never used.","'dispatch' is assigned a value but never used.",{"desc":"105","fix":"106"},"Update the dependencies array to be: [dispatch, moviesList.status]",{"range":"107","text":"108"},[852,862],"[dispatch, moviesList.status]"]